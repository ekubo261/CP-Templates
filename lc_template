#include <algorithm>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
 
#define ff              first
#define ss              second
#define pb              push_back
#define pii             pair<int,int>
#define vi              vector<int>
#define vii             vector<vector<int>>
#define mii             map<int,int>
#define umii            unordered_map<int,int>
#define pqb             priority_queue<int>
#define pqs             priority_queue<int,vi,greater<int>>
#define setbits(x)      __builtin_popcountll(x)
#define leadzro(x)      __builtin_clzll(x)
#define zrobits(x)      __builtin_ctzll(x)
#define mod             1000000007
#define inf             1e18
#define ps(x,y)         fixed<<setprecision(y)<<x
#define f(i,n)          for (int i=0; i<n; i++)
#define rf(i,n)         for (int i=n-1; i>=0; i--)
#define sort(a)         sort(a.begin(),a.end());
#define rev(a)          reverse(a.begin(),a.end());
typedef tree<int, null_type, greater<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; //find_by_order, order_of_key
//use less_equal<int> for duplicate elements, greater<int> for descending
